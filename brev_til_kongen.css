body {
    /*part of making footer stick to bottom*/
    min-height: 100vh;
    display: flex;
    flex-direction: column;

    /*make background colors of header and main fill the whole page*/
    min-width: 100%;
    margin: 0;
    padding: 0;

    /*set defaults*/
    background-color: #fff;
    color: #000;

    /*almost all text on this page will be centered*/
    text-align: center;
}
header {
    width: 100%;
    background-color: #082;
    color: #3e3c25;
}
header>*, main>* {
    margin-left: auto;
    margin-right: auto;
    max-width: 30em;
    min-width: 10em;
}
header h1 {
    margin-top: 0.3em;
    margin-bottom: 0.3em;
    font-size: 150%;
}
header p {
    margin-top: 0.1em;
    margin-bottom: 0.4em;
}
main {
    /*part of making footer stick to bottom*/
    flex: 1;

    padding: 1em;
}
footer {
    width: 100%;
}

#table {
    margin-top: 0;
    min-height: 25em;
    background-color: #0a0;
    border-color: #262;
    border-style: solid;
    border-width: 0.3em;
    border-radius: 0.75em;
    justify-content: space-between;
    /*simplify calculations when animating*/
    box-sizing: border-box;
    /*the reference for a position:absolute element must have position:relative*/
    position: relative;
}
@media (max-width: 30rem) {
    main {
        padding-left: 0;
        padding-right: 0;
    }
    #table {
        border-radius: 0;
        border-width: 0.2em 0 0.2em 0;
        width: 100%;
    }
}
.player {
    background-color: #00a600;
    border-color: #444;
    border-style: solid;
    border-width: 0.02em;
    border-radius: 0.2em;
    margin: 0.5em;
    min-height: 6.5em;
    min-width: 7em;
}
.player>p {
    font-size: 50%;
    color: #444;
    margin: 0 auto;
    padding: 0.1em 1.3em 0.05em 1.3em;
}
.player.lost {
    filter: brightness(75%);
}
.player.immune {
    filter: brightness(90%);
}
.player.active>P:first-child {
    background-color: #8c8;
    color: #662;
}
.card {
    height: 5em;
    width: 3em;
    margin: 0.2em;
}

#table, .player, .opponent {
    display: flex;
    flex-direction: column;
}
#table>* {
    margin-left: auto;
    margin-right: auto;
}
#opponents, #center, .hand {
    display: flex;
    flex-direction: row;
    justify-content: center;
}
.hand {
    width: 7em;
}
#center {
    width: 7.5em;
    justify-content: space-around;
}
#opponents {
    overflow-x: scroll;
    max-width: 80vw;
}
#message, #buttons {
    font-size: 80%;
    min-height: 1.5em;
}

.card {
    border-radius: 0.5em;
    /*use border as the edge around the center until I make images*/
    /*to make this work nicely, make the border not increase the size of the element*/
    box-sizing: border-box;
    border-width: 0.2em;
    border-style: solid;
    padding: 0.18em;

    border-color: #eec;
    background-color: #ee7;
    color: #c44;

    /*vertically justify the text*/
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.no-card {
    /*be invisible, but need the position for animations*/
    visibility: hidden;
}
.hidden-card {
    border-width: 0.15em;
    background-color: #a04b19;
}
.highlighted-card {
    filter: brightness(120%);
}

#removed-card {
    rotate: 90deg;
    position: absolute;
    margin-left: -7em;
    /*put below undealt cards but above no cards*/
    z-index: 11;
}
#removed-card.no-card {
    z-index: 9;
}
#undealt-cards {
    z-index: 12;
}
#undealt-cards.no-card, #played-cards.no-card {
    z-index: 10;
    /*show as empty slot*/
    visibility: visible;
    border-width: 0;
    background-color: #080;
}

.card p {
    margin: 0;
}
.card p:last-child {
    rotate: 180deg;
}
.card.hidden-card p {
    color: #ff0;
    font-size: 50%;
}
.card p.wrong-guess {
    color: #f00;
    font-size: 180%;
    height: 100%;
    text-justify: distribute;
}
.card.hidden-card p:last-child {
    rotate: 0deg;
}

.pick-one .card:hover, .card.hidden-card p:hover {
    filter: brightness(150%);
    cursor: pointer;
}

#moving-card {
    position: absolute;
    z-index: 13;
}
